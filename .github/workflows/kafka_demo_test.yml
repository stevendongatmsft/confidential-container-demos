name: Kafka Demo Test 

on:
  pull_request:
    branches: 
      - main
  workflow_call:
    inputs:
      sidecar-registry:
        description: "The registry to get the image from"
        required: true
        default: "mcr.microsoft.com"
        type: string
      key-release-image:
        description: "The image of the SKR sidecar to use"
        required: true
        default: "aci/skr:2.7"
        type: string
      consumer-image: 
        description: "Consumer Image"
        required: true
        type: string
      producer-image: 
        description: "Producer Image"
        required: true
        type: string
      skr-kafka-demo-topic:
        description: "Kafka topic"
        required: true
        default: "kafka-demo-topic"
        type: string  
  workflow_dispatch:
    inputs:
      sidecar-registry:
        description: "The registry to get the image from"
        required: true
        type: choice
        default: mcr.microsoft.com
        options: 
          - mcr.microsoft.com
          - confidentialsidecars.azurecr.io
      key-release-image:
        description: "The image of the SKR sidecar to use"
        required: true
        default: "aci/skr:2.7"
        type: string
      consumer-image: 
        description: "Consumer Image"
        default: acc/samples/kafka/consumer:1.0
        required: true
        type: string
      producer-image: 
        description: "Producer Image"
        default: acc/samples/kafka/producer:1.0
        required: true
        type: string
  merge_group:
    branches:
      - main

jobs:
  build-image:
    name: Build Image 
    runs-on: ubuntu-latest 
    steps: 
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build image 
        id: build-image
        run: | 
          if [[ "${{ inputs.consumer-image }}" == "" ]]; then
            echo "sidecar-registry=mcr.microsoft.com" >> $GITHUB_OUTPUT
            echo "key-release-image=aci/skr:2.7" >> $GITHUB_OUTPUT
            echo "consumer-image=acc/samples/kafka/consumer:1.0" >> $GITHUB_OUTPUT
            echo "producer-image=acc/samples/kafka/producer:1.0" >> $GITHUB_OUTPUT
          fi 

          echo "sidecar-registry=${{ inputs.sidecar-registry }}" >> $GITHUB_OUTPUT
          echo "key-release-image=${{ inputs.key-release-image }}" >> $GITHUB_OUTPUT
          echo "consumer-image=${{ inputs.consumer-image }}" >> $GITHUB_OUTPUT
          echo "producer-image=${{ inputs.producer-image }}" >> $GITHUB_OUTPUT
          fi


  prepare:
    name: Extract Environment Variables
    runs-on: ubuntu-latest
    outputs:
      sidecar-registry: ${{ steps.extract-envs.outputs.sidecar-registry }}
      key-release-image: ${{ steps.extract-envs.outputs.key-release-image }}
      consumer-image: ${{ steps.extract-envs.outputs.consumer-image }}
      producer-image: ${{ steps.extract-envs.outputs.producer-image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract Envs 
        id: extract-envs
        run: | 
          echo "Extracting Environment Variables"
          echo "Triggering event is ${{ github.event_name }}"
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "sidecar-registry=mcr.microsoft.com" >> $GITHUB_OUTPUT
            echo "key-release-image=aci/skr:2.7" >> $GITHUB_OUTPUT
            echo "consumer-image=acc/samples/kafka/consumer:1.0" >> $GITHUB_OUTPUT
            echo "producer-image=acc/samples/kafka/producer:1.0" >> $GITHUB_OUTPUT
          else
            echo "sidecar-registry=${{ inputs.sidecar-registry }}" >> $GITHUB_OUTPUT
            echo "key-release-image=${{ inputs.key-release-image }}" >> $GITHUB_OUTPUT
            echo "consumer-image=${{ inputs.consumer-image }}" >> $GITHUB_OUTPUT
            echo "producer-image=${{ inputs.producer-image }}" >> $GITHUB_OUTPUT
          fi

  create-prepare-aks-cluster:
    name: Create AKS Cluster
    needs: [prepare]
    uses: ./.github/workflows/_create_prepare_aks_cluster.yml
    secrets: inherit
 
  deploy-kafka-test: 
    name: Deploy Kafka Demo Test 
    uses: ./.github/workflows/_deploy_kafka_test.yml
    needs: [prepare, create-prepare-aks-cluster]
    secrets: inherit 
    with: 
      cluster-name: ${{ needs.create-prepare-aks-cluster.outputs.cluster-name }}
      sidecar-registry: ${{ needs.prepare.outputs.sidecar-registry }}
      key-release-image: ${{ needs.prepare.outputs.key-release-image }}
      consumer-image: ${{ needs.prepare.outputs.consumer-image }}
      producer-image: ${{ needs.prepare.outputs.producer-image }}

  test-workload: 
    name: Test Workload 
    uses: ./.github/workflows/_test_workload.yml
    needs: [prepare, create-prepare-aks-cluster, deploy-kafka-test]
    secrets: inherit 
    with: 
      cluster-name: ${{ needs.create-prepare-aks-cluster.outputs.cluster-name }}

  cleanup: 
    name: Clean Up
    if: always()
    uses: ./.github/workflows/_cleanup.yml
    needs: [prepare, create-prepare-aks-cluster, deploy-kafka-test, test-workload]
    secrets: inherit
    with:
      cluster-name: ${{ needs.create-prepare-aks-cluster.outputs.cluster-name }}


  

